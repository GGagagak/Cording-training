CREATE TABLE USERS (
    EMAIL VARCHAR(320) PRIMARY KEY NOT NULL,
    NAME VARCHAR(21) NOT NULL,
    PASSWORD VARCHAR(300) NOT NULL,
    TEL VARCHAR(13),
    EDU VARCHAR(30),
    ROLE INT NOT NULL,
    SALT VARCHAR(100),
    GENDER VARCHAR(10) DEFAULT 'Unknown',
    STATUS VARCHAR(2)
);

CREATE TABLE BOARDS (
    SEQ INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    DIV_NUM VARCHAR(2),
    TITLE VARCHAR(300) NOT NULL,
    CONTENTS LONGTEXT NOT NULL,
    READ_CNT INT,
    REG_DT DATETIME DEFAULT CURRENT_TIMESTAMP,
    REG_ID VARCHAR(21),
    MOD_DT DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    MOD_ID VARCHAR(21),
    UUID VARCHAR(45)
) ENGINE = InnoDB;
-- ++추가사항 MySQL에서 DIV라는 예약어가 존재하기 때문에 DIV_NUM 로 사용 / BOARD -> BOARDS 로 변경
-- mySql 은 시퀀스를 사용하지 않기 때문에 AUTO_INCREMENT를 사용하여 숫자 생성하게 함
-- 이후 ROW_NUM 으로 정리하면서 게시물 생성하도록
-- ROW_NUMBER() OVER (ORDER BY board_no) AS "SEQ" 를 사용하려 했으나 대공사가 될것 같음.. 사용 X 
drop table boards 

CREATE TABLE LIKES (
    EMAIL VARCHAR(320) NOT NULL,
    BOARD_SEQ INT NOT NULL,
    FOREIGN KEY (EMAIL) REFERENCES Users(EMAIL),
    FOREIGN KEY (BOARD_SEQ) REFERENCES Boards(SEQ)
);

CREATE TABLE ACADEMYS (
    SEQ INT PRIMARY key NOT NULL,
    NAME VARCHAR(100)
) ENGINE = InnoDB;

CREATE TABLE COURSES (
    CODE INT primary key NOT NULL,
    NAME VARCHAR(100) not NULL,
    NUMBER_OF_TIMES INT not NULL,
    INFO VARCHAR(4000),
    ACADEMYS_SEQ INT not NULL,
    START_DATE DATE,
    END_DATE DATE,
    FOREIGN KEY (ACADEMYS_SEQ) REFERENCES ACADEMYS(SEQ)
);
-- NUMBER_OF_TIMES 는 ERD에 있는 CLASS컬럼 역할을 하는 것
drop table courses

CREATE TABLE USERS_COURSES (
    EMAIL VARCHAR(320) not NULL,
    COURSES_CODE INT not NULL,
    FOREIGN KEY (EMAIL) REFERENCES USERS(EMAIL),
    FOREIGN KEY (COURSES_CODE) REFERENCES COURSES(CODE)
);

CREATE TABLE LICENSES (
    SEQ INT primary key not null,
    NAME VARCHAR(50) not NULL
);

CREATE TABLE USER_LICENSES (
    EMAIL VARCHAR(320) not NULL,
    LICENSES_SEQ INT not NULL,
    REG_DT DATE,
    FOREIGN KEY (EMAIL) REFERENCES USERS(EMAIL),
    FOREIGN KEY (LICENSES_SEQ) REFERENCES LICENSES(SEQ)
);

CREATE TABLE CMN_CODE (
    MST_CODE VARCHAR(30),
    DET_CODE VARCHAR(30),
    MST_NAME VARCHAR(50),
    DET_NAME VARCHAR(50),
    SEQ INT(5),
    USE_YN CHAR(1) DEFAULT '1' NOT NULL,
    REG_DT DATETIME DEFAULT CURRENT_TIMESTAMP,
    REG_ID VARCHAR(21),
    MOD_DT DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    MOD_ID VARCHAR(21),
    PRIMARY KEY (MST_CODE, DET_CODE)
);
-- SEQ 때문에 보류 이거 입력을 해야되는건지..? 모르겠네

CREATE TABLE SUBJECT (
    SUBJECT_CODE INT NOT NULL,
    COURSES_CODE INT NOT NULL,
    TRAINEE VARCHAR(320) NOT NULL,
    PROFESSOR VARCHAR(320),
    SCORE DECIMAL(4,1) DEFAULT 0,
    PRIMARY KEY (SUBJECT_CODE, COURSES_CODE, TRAINEE)
);


CREATE TABLE DM (
    SEQ INT primary key auto_increment not null,
    ROOM INT not null,
    SENDER VARCHAR(320) not null,
    RECEIVER VARCHAR(320) not null,
    CONTENTS VARCHAR(320) not null,
    SEND_DT DATE,
    READ_DT DATE,
    READ_CHK INT
) ENGINE = InnoDB;

CREATE TABLE REPLY (
    REPLY_SEQ INT primary key auto_increment not null,
    BOARD_SEQ INT not null,
    REPLY VARCHAR(1000),
    REG_DT DATETIME DEFAULT CURRENT_TIMESTAMP,
    REG_ID VARCHAR(30),
    MOD_DT DATETIME DEFAULT CURRENT_TIMESTAMP
) ENGINE = InnoDB;


CREATE TABLE ATTACH_FILE (
    UUID VARCHAR(45) NOT NULL,
    SEQ INT NOT NULL AUTO_INCREMENT,
    ORG_FILE_NAME VARCHAR(300),
    SAVE_FILE_NAME VARCHAR(50),
    EXTENSION VARCHAR(5),
    FILE_SIZE INT,
    SAVE_PATH VARCHAR(150),
    REG_DT DATETIME DEFAULT CURRENT_TIMESTAMP,
    REG_ID VARCHAR(30),
    PRIMARY KEY (SEQ),
    UNIQUE KEY (UUID)
) ENGINE = InnoDB;

Insert into ATTACH_FILE (UUID,SEQ,ORG_FILE_NAME,SAVE_FILE_NAME,EXTENSION,FILE_SIZE,SAVE_PATH,REG_DT,REG_ID) values ('20231228_2eba5103-06e7-43e5-babd-3acb296e0b25',1,'good_job01.xlsx','20240304_356fb5a8-8cc8-49b9-b761-62cb2d03e415.xlsx','xlsx',201,'C:\upload\2023\12',to_date('24/03/04','RR/MM/DD'),'Admin');
-- to_date 함수가 없으므로 다른 방법을 사용하여 날짜를 삽입해야 합니다.
-- MySQL에서는 날짜를 직접 문자열로 입력하거나 STR_TO_DATE 함수를 사용하여 문자열을 날짜로 변환할 수 있습니다. 

INSERT INTO ATTACH_FILE (UUID, SEQ, ORG_FILE_NAME, SAVE_FILE_NAME, EXTENSION, FILE_SIZE, SAVE_PATH, REG_DT, REG_ID) 
VALUES ('20231228_2eba5103-06e7-43e5-babd-3acb296e0b25', 1, 'good_job01.xlsx', '20240304_356fb5a8-8cc8-49b9-b761-62cb2d03e415.xlsx', 'xlsx', 201, 'C:\\upload\\2023\\12', '2024-03-04', 'Admin');
-- mysql 쿼리


drop table attach_file 
-- unique key uuid로 설정

CREATE TABLE SCHEDULE (
    SCHEDULE_ID INT unique key not NULL,
    SEQ INT primary key not null,
    CAL_ID INT,
    TITLE VARCHAR(200),
    EXPLANATION VARCHAR(4000),
    EMAIL VARCHAR(320)
) engine = InnoDB;

drop table schedule 

CREATE TABLE CALENDAR (
    CAL_ID INT primary key not null,
    YEAR VARCHAR(4) DEFAULT '2024',
    MONTH VARCHAR(2),
    DAY VARCHAR(2),
    DAY_OF_WEEK VARCHAR(3),
    WEEK_NO INT
);

CREATE TABLE ATTENDANCE (
    TRAINEE VARCHAR(320) primary key not null,
    PROFESSOR VARCHAR(320),
    CAL_ID INT unique key not null,
    ATTEND_STATUS INT,
    SEQ INT unique key not null
) ENGINE = InnoDB;

drop table attendance 
-- ATTENDANCE 에서 SEQ는 순번

Insert into ATTENDANCE (TRAINEE,PROFESSOR,CAL_ID,ATTEND_STATUS,SEQ) values ('dohyun@naver.com','hykim@gmail.com',20240226,10,541);
Insert into ATTENDANCE (TRAINEE,PROFESSOR,CAL_ID,ATTEND_STATUS,SEQ) values ('krn2000@naver.com','hykim@gmail.com',20240227,10,21);

select *
from attendance a 

-- 테이블 드랍시 순서 (연결된 테이블이 있기 때문에 바로 삭제 안됨)
drop table attendance
drop table calendar 
drop table schedule 
drop table ATTACH_FILE
drop table REPLY
drop table DM
drop table SUBJECT
drop table CMN_CODE
drop table USER_LICENSES
drop table LICENSES
drop table USERS_COURSES
drop table COURSES
drop table ACADEMYS
drop table LIKES
drop table BOARDS
drop table USERS

-- 시퀀스 추가해야할 컬럼
-- ACADEMYS_SEQ o
-- ATTACH_FILE_SEQ o
-- ATTENDANCE_SEQ o
-- BOARD_SEQ o
-- DM_SEQ o
-- REPLY_SEQ o
-- SCHEDULE_SEQ o 
-- CODE_SEQ : CODE 테이블 쿼리 왜 없노..???
-- USER_LICENSES_SEQ XX
-- COURSES_SEQ XX
-- CMN_CODE_SEQ XX 필요없는듯??



