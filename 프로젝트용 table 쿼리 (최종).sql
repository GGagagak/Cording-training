CREATE TABLE "SCOTT"."USERS" 
   (	"USER_ID" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
	"PASSWORD" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
	"EMAIL" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"NAME" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
	"BIRTHDAY" DATE NOT NULL ENABLE, 
	"ROLE" NUMBER(1,0) DEFAULT 1 NOT NULL ENABLE, 
	 CONSTRAINT "PK_USERS" PRIMARY KEY ("USER_ID"));
 
   COMMENT ON COLUMN "SCOTT"."USERS"."USER_ID" IS '회원 아이디';
   COMMENT ON COLUMN "SCOTT"."USERS"."PASSWORD" IS '비밀번호';
   COMMENT ON COLUMN "SCOTT"."USERS"."EMAIL" IS '이메일';
   COMMENT ON COLUMN "SCOTT"."USERS"."NAME" IS '이름';
   COMMENT ON COLUMN "SCOTT"."USERS"."BIRTHDAY" IS '생년월일';
   COMMENT ON COLUMN "SCOTT"."USERS"."ROLE" IS '등급';
   COMMENT ON TABLE "SCOTT"."USERS"  IS '회원(가입정보)';

   -----------------------------------------------------------------------------
  CREATE TABLE "SCOTT"."ACADEMYS" 
   (	"ACADEMY_NO" NUMBER NOT NULL ENABLE, 
	"NAME" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"AREA" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	 CONSTRAINT "PK_ACADEMY" PRIMARY KEY ("ACADEMY_NO"));
	 
   COMMENT ON COLUMN "SCOTT"."ACADEMYS"."ACADEMY_NO" IS '학원 번호';
   COMMENT ON COLUMN "SCOTT"."ACADEMYS"."NAME" IS '학원 이름';
   COMMENT ON COLUMN "SCOTT"."ACADEMYS"."AREA" IS '지역';
   COMMENT ON TABLE "SCOTT"."ACADEMYS"  IS '학원';
-----------------------------------------------------------------------------

  CREATE TABLE "SCOTT"."JOBS" 
   (	"J_NAME" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	 CONSTRAINT "PK_JOB" PRIMARY KEY ("J_NAME"));

  COMMENT ON COLUMN "SCOTT"."JOB"."J_NAME" IS '직종 이름';
  COMMENT ON TABLE "SCOTT"."JOB"  IS '직종';
  -----------------------------------------------------------------------------
CREATE TABLE "SCOTT"."BOARDS" 
   ("BOARD_NO" NUMBER GENERATED ALWAYS AS IDENTITY CONSTRAINT BOARDS_pk PRIMARY KEY, 
	"USER_ID" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
	"TITLE" VARCHAR2(255 BYTE) NOT NULL ENABLE, 
	"DRAWUP" DATE DEFAULT SYSDATE NOT NULL ENABLE, 
	"REFERENCE_NO" NUMBER NOT NULL ENABLE, 
	"CONTENT" CLOB NOT NULL ENABLE,
	CONSTRAINT "FK_USERS_TO_BOARDS" FOREIGN KEY ("USER_ID")
	REFERENCES "SCOTT"."USERS" ("USER_ID"));

ALTER table BOARDS MODIFY(BOARD_NO generated as IDENTITY (START WITH 1));

   COMMENT ON COLUMN "SCOTT"."BOARDS"."BOARD_NO" IS '게시글 번호';
   COMMENT ON COLUMN "SCOTT"."BOARDS"."USER_ID" IS '회원 아이디';
   COMMENT ON COLUMN "SCOTT"."BOARDS"."TITLE" IS '제목';
   COMMENT ON COLUMN "SCOTT"."BOARDS"."DRAWUP" IS '작성일';
   COMMENT ON COLUMN "SCOTT"."BOARDS"."REFERENCE_NO" IS '조회수';
   COMMENT ON COLUMN "SCOTT"."BOARDS"."CONTENT" IS '내용';
   COMMENT ON TABLE "SCOTT"."BOARDS"  IS '게시판';

-- Oracle 데이터베이스에서 ENABLE 키워드를 사용하여 IDENTITY 옵션을 명시적으로 활성화하는 것은 선택 사항입니다.
--  GENERATED ALWAYS AS IDENTITY 구문 자체로 이미 활성화되기 때문에 별도로 ENABLE 키워드를 명시할 필요가 없습니다.

 -------------------------------------------------------------------------------------

  CREATE TABLE "SCOTT"."COURSES" 
   ("COURSE_NO" NUMBER NOT NULL ENABLE, 
	"NAME" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"ACADEMY_NO" NUMBER NOT NULL ENABLE, 
	 CONSTRAINT "PK_COURSE" PRIMARY KEY ("COURSE_NO"),
	 CONSTRAINT "FK_ACADEMY_TO_COURSE" FOREIGN KEY ("ACADEMY_NO")
	REFERENCES "SCOTT"."ACADEMYS" ("ACADEMY_NO"))

   COMMENT ON COLUMN "SCOTT"."COURSES"."COURSE_NO" IS '과정번호';
   COMMENT ON COLUMN "SCOTT"."COURSES"."NAME" IS '과정 이름';
   COMMENT ON COLUMN "SCOTT"."COURSES"."ACADEMY_NO" IS '학원 번호';
   COMMENT ON TABLE "SCOTT"."COURSES"  IS '훈련 프로그램 과정';
 -------------------------------------------------------------------------------------
   CREATE TABLE "SCOTT"."PROFILES" 
   (	"USER_ID" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
	"D_JOB" VARCHAR2(100 BYTE), 
	"EDUACATION" VARCHAR2(20 BYTE), 
	 CONSTRAINT "PK_PROFILE" PRIMARY KEY ("USER_ID"),
	 CONSTRAINT "FK_USERS_TO_PROFILE" FOREIGN KEY ("USER_ID")
	  REFERENCES "SCOTT"."USERS" ("USER_ID"));

   COMMENT ON COLUMN "SCOTT"."PROFILES"."USER_ID" IS '회원 아이디';
   COMMENT ON COLUMN "SCOTT"."PROFILES"."D_JOB" IS 'IT직종 한정, 코드화';
   COMMENT ON COLUMN "SCOTT"."PROFILES"."EDUACATION" IS '코드화';
   COMMENT ON TABLE "SCOTT"."PROFILES"  IS '회원(프로필)';

    -------------------------------------------------------------------------------------
      CREATE TABLE "SCOTT"."COMMENTS" 
   (	
    "COMMENT_NO" NUMBER GENERATED ALWAYS AS IDENTITY CONSTRAINT COMMENTS_pk PRIMARY KEY, 
    "USER_ID" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
    "BOARD_NO" NUMBER, 
    "CONTENT" VARCHAR2(300 BYTE), 
    "RECOMMEND" NUMBER, 
    CONSTRAINT "FK_USERS_TO_COMMENTS" FOREIGN KEY ("USER_ID") REFERENCES "SCOTT"."USERS" ("USER_ID"),
    CONSTRAINT "FK_BOARD_TO_COMMENTS" FOREIGN KEY ("BOARD_NO") REFERENCES "SCOTT"."BOARDS" ("BOARD_NO"));

   COMMENT ON COLUMN "SCOTT"."COMMENTS"."COMMENT_NO" IS '댓글 번호';
   COMMENT ON COLUMN "SCOTT"."COMMENTS"."USER_ID" IS '회원 아이디';
   COMMENT ON COLUMN "SCOTT"."COMMENTS"."BOARD_NO" IS '게시글 번호';
   COMMENT ON COLUMN "SCOTT"."COMMENTS"."CONTENT" IS '내용';
   COMMENT ON COLUMN "SCOTT"."COMMENTS"."RECOMMEND" IS '추천수';
   COMMENT ON TABLE "SCOTT"."COMMENTS"  IS '댓글';
    -------------------------------------------------------------------------------------


        CREATE TABLE REVIEWS (
	user_id VARCHAR2(20),
     title VARCHAR2(255),
	course_no NUMBER,
	review_no NUMBER GENERATED ALWAYS AS IDENTITY,
	drawup DATE,
	reference_no NUMBER,
	recommend NUMBER);


CREATE UNIQUE INDEX PK_REVIEWS
	ON REVIEWS (
		user_id ASC,
		course_no ASC
	);

ALTER TABLE REVIEWS
	ADD
		CONSTRAINT PK_REVIEWS
		PRIMARY KEY (
			user_id,
			course_no
		);

ALTER TABLE REVIEWS
	ADD
		CONSTRAINT FK_USERS_TO_REVIEWS
		FOREIGN KEY (
			user_id
		)
		REFERENCES USERS (
			user_id
		);

ALTER TABLE REVIEWS
	ADD
		CONSTRAINT FK_COURSES_TO_REVIEW
		FOREIGN KEY (
			course_no
		)
		REFERENCES COURSES(
			course_no
		);
        
        
COMMENT ON TABLE REVIEWS IS '리뷰';

COMMENT ON COLUMN REVIEWS.user_id IS '회원 아이디';

COMMENT ON COLUMN REVIEWS.course_no IS '과정번호';

COMMENT ON COLUMN REVIEWS.review_no IS 'sequence';

COMMENT ON COLUMN REVIEWS.drawup IS '작성일';

COMMENT ON COLUMN REVIEWS.reference_no IS '조회수';

COMMENT ON COLUMN REVIEWS.recommend IS '추천수';



   
ALTER table REVIEWS MODIFY(REVIEW_NO generated as IDENTITY (START WITH 1));

   COMMENT ON COLUMN "SCOTT"."REVIEWS"."USER_ID" IS '회원 아이디';
   COMMENT ON COLUMN "SCOTT"."REVIEWS"."COURSE_NO" IS '과정번호';
   COMMENT ON COLUMN "SCOTT"."REVIEWS"."REVIEW_NO" IS '리뷰 번호';
   COMMENT ON COLUMN "SCOTT"."REVIEWS"."DRAWUP" IS '작성일';
   COMMENT ON COLUMN "SCOTT"."REVIEWS"."REFERENCE_NO" IS '조회수';
   COMMENT ON COLUMN "SCOTT"."REVIEWS"."RECOMMEND" IS '추천수';
   COMMENT ON TABLE "SCOTT"."REVIEWS"  IS '리뷰';
--------------------------------------------------------------------------------------------------

   
  CREATE TABLE "SCOTT"."VISION" 
   ("J_NAME" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"COURSE_NO" NUMBER NOT NULL ENABLE, 
	 CONSTRAINT "PK_VISION" PRIMARY KEY ("J_NAME", "COURSE_NO"),
	 CONSTRAINT "FK_COURSE_TO_VISION" FOREIGN KEY ("COURSE_NO") REFERENCES "SCOTT"."COURSES" ("COURSE_NO") , 
	 CONSTRAINT "FK_JOB_TO_VISION" FOREIGN KEY ("J_NAME") REFERENCES "SCOTT"."JOBS" ("J_NAME")
   );

   CREATE TABLE "SCOTT"."VISIONS" 
   (
    "J_NAME" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
    "COURSE_NO" NUMBER NOT NULL ENABLE, 
    CONSTRAINT "PK_VISIONS" PRIMARY KEY ("J_NAME", "COURSE_NO"),
    CONSTRAINT "FK_JOB_TO_VISIONS" FOREIGN KEY ("J_NAME") REFERENCES "SCOTT"."JOBS" ("J_NAME"),
    CONSTRAINT "FK_COURSE_TO_VISIONS" FOREIGN KEY ("COURSE_NO") REFERENCES "SCOTT"."COURSES" ("COURSE_NO"));

   COMMENT ON COLUMN "SCOTT"."VISIONS"."J_NAME" IS '직종 이름';
   COMMENT ON COLUMN "SCOTT"."VISIONS"."COURSE_NO" IS '과정번호';
   COMMENT ON TABLE "SCOTT"."VISIONS"  IS '진로';

-------------------------------------------------------------------------------------------------------
 CREATE TABLE HISTORYS (
	user_id VARCHAR2(20) NOT NULL,
	course_no NUMBER NOT NULL
);

COMMENT ON TABLE HISTORYS IS '훈련 이수';

COMMENT ON COLUMN HISTORYS.user_id IS '회원 아이디';

COMMENT ON COLUMN HISTORYS.course_no IS '과정번호';

CREATE UNIQUE INDEX PK_HISTORYS
	ON HISTORYS (
		user_id ASC,
		course_no ASC
	);

ALTER TABLE HISTORYS
	ADD
		CONSTRAINT PK_HISTORYS
		PRIMARY KEY (
			user_id,
			course_no
		);

ALTER TABLE HISTORYS
	ADD
		CONSTRAINT FK_PROFILE_TO_HISTORYS
		FOREIGN KEY (
			user_id
		)
		REFERENCES PROFILES (
			user_id
		);

ALTER TABLE HISTORYS
	ADD
		CONSTRAINT FK_COURSE_TO_HISTORYS
		FOREIGN KEY (
			course_no
		)
		REFERENCES COURSES (
			course_no
		);


